{
	"info": {
		"_postman_id": "7469a270-8bea-4043-9591-dbfda5163d4e",
		"name": "catenax-edc-local",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Provider",
			"item": [
				{
					"name": "Health check",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "",
									"type": "string"
								},
								{
									"key": "key",
									"value": "X-Api-Key",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8181/api/check/health",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8181",
							"path": [
								"api",
								"check",
								"health"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create asset",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "passwordProvider",
									"type": "string"
								},
								{
									"key": "key",
									"value": "X-Api-Key",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"asset\": {\n        \"properties\": {\n            \"asset:prop:id\": \"{{assetID}}\",\n            \"asset:prop:name\": \"{{fileName}}\",\n            \"asset:prop:contenttype\": \"HttpData\"\n        }\n    },\n    \"dataAddress\": {\n        \"properties\": {\n            \"type\": \"HttpData\",\n            \"baseUrl\": \"{{downloadFileURL}}\",\n            \"contentType\": \"application/json\",\n            \"transferInOneGo\": \"true\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8182/api/v1/data/assets",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8182",
							"path": [
								"api",
								"v1",
								"data",
								"assets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all assets",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "passwordProvider",
									"type": "string"
								},
								{
									"key": "key",
									"value": "X-Api-Key",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:8182/api/v1/data/assets",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8182",
							"path": [
								"api",
								"v1",
								"data",
								"assets"
							],
							"query": [
								{
									"key": "offset",
									"value": "5734126",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "5734126",
									"disabled": true
								},
								{
									"key": "filter",
									"value": "te",
									"disabled": true
								},
								{
									"key": "sort",
									"value": "DESC",
									"disabled": true
								},
								{
									"key": "sortField",
									"value": "tenant",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create policy",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "passwordProvider",
									"type": "string"
								},
								{
									"key": "key",
									"value": "X-Api-Key",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"uid\": \"4ae29651-f56a-4e8e-8186-444f10c701f2\",\n    \"policy\": {\n        \"permissions\": [\n            {\n                \"edctype\": \"dataspaceconnector:permission\",\n                \"target\": \"{{assetID}}\",\n                \"action\": {\n                    \"type\": \"USE\"\n                }\n            }\n        ],\n        \"target\": \"{{assetID}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8182/api/v1/data/policydefinitions",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8182",
							"path": [
								"api",
								"v1",
								"data",
								"policydefinitions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all policies",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "passwordProvider",
									"type": "string"
								},
								{
									"key": "key",
									"value": "X-Api-Key",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:8182/api/v1/data/policydefinitions",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8182",
							"path": [
								"api",
								"v1",
								"data",
								"policydefinitions"
							],
							"query": [
								{
									"key": "offset",
									"value": "-37301109",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "-37301109",
									"disabled": true
								},
								{
									"key": "filter",
									"value": "Excepteur cupidatat",
									"disabled": true
								},
								{
									"key": "sort",
									"value": "ASC",
									"disabled": true
								},
								{
									"key": "sortField",
									"value": "Excepteur cupidatat",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create contract",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "passwordProvider",
									"type": "string"
								},
								{
									"key": "key",
									"value": "X-Api-Key",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"accessPolicyId\": \"4ae29651-f56a-4e8e-8186-444f10c701f2\",\n  \"contractPolicyId\": \"4ae29651-f56a-4e8e-8186-444f10c701f2\",\n  \"criteria\": [\n    {\n      \"left\": \"asset:prop:id\",\n      \"op\": \"=\",\n      \"right\": \"{{assetID}}\"\n    }\n  ],\n  \"id\": \"{{assetID}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8182/api/v1/data/contractdefinitions",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8182",
							"path": [
								"api",
								"v1",
								"data",
								"contractdefinitions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all Contracts",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "passwordProvider",
									"type": "string"
								},
								{
									"key": "key",
									"value": "X-Api-Key",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:8182/api/v1/data/contractdefinitions",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8182",
							"path": [
								"api",
								"v1",
								"data",
								"contractdefinitions"
							],
							"query": [
								{
									"key": "offset",
									"value": "-37301109",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "-37301109",
									"disabled": true
								},
								{
									"key": "filter",
									"value": "Excepteur cupidatat",
									"disabled": true
								},
								{
									"key": "sort",
									"value": "ASC",
									"disabled": true
								},
								{
									"key": "sortField",
									"value": "Excepteur cupidatat",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Register digital twin",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": [\n        {\n            \"language\": \"en\",\n            \"text\": \"Siemens Traceability Auto Generated Data Model EA12\"\n        }\n    ],\n    \"globalAssetId\": {\n        \"value\": [\n            \"{{digitalTwinID}}\"\n        ]\n    },\n    \"idShort\": \"Siemens Traceability Data\",\n    \"identification\": \"{{digitalTwinID}}\",\n    \"specificAssetIds\": [\n        {\n            \"key\": \"PartNumber\",\n            \"value\": \"25SI\"\n        }\n    ],\n    \"submodelDescriptors\": [\n        {\n            \"description\": [\n                {\n                    \"language\": \"en\",\n                    \"text\": \"Traceability Submodel\"\n                }\n            ],\n            \"idShort\": \"traceability\",\n            \"identification\": \"{{assetID}}\",\n            \"semanticId\": {\n                \"value\": [\n                    \"urn:bamm:com.catenax.traceability\"\n                ]\n            },\n            \"endpoints\": [\n                {\n                    \"interface\": \"SUBMODEL.SIEM.0002\",\n                    \"protocolInformation\": {\n                        \"endpointAddress\": \"{{providerIdsDataPath}}\",\n                        \"endpointProtocol\": \"IDS/ECLIPSE DATASPACE CONNECTOR\",\n                        \"endpointProtocolVersion\": \"0.0.1-SNAPSHOT\"\n                    }\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4243/registry/shell-descriptors",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4243",
							"path": [
								"registry",
								"shell-descriptors"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Consumer",
			"item": [
				{
					"name": "Health check",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "",
									"type": "string"
								},
								{
									"key": "key",
									"value": "X-Api-Key",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:9191/api/check/health",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9191",
							"path": [
								"api",
								"check",
								"health"
							]
						}
					},
					"response": []
				},
				{
					"name": "Digital twin lookup",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:4243/lookup/shells?assetIds=[{\n\t\"key\": \"PartNumber\",\n\t\"value\": \"25SI\"\n}]",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4243",
							"path": [
								"lookup",
								"shells"
							],
							"query": [
								{
									"key": "assetIds",
									"value": "[{\n\t\"key\": \"PartNumber\",\n\t\"value\": \"25SI\"\n}]"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get digital twin",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:4243/registry/shell-descriptors/{{digitalTwinID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4243",
							"path": [
								"registry",
								"shell-descriptors",
								"{{digitalTwinID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all digital twins",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:4243/registry/shell-descriptors/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4243",
							"path": [
								"registry",
								"shell-descriptors",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get offers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseText = pm.response.text();\r",
									"pm.test(\"Response is OK\", () => {\r",
									"    pm.expect(responseText).to.be.not.empty\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"\r",
									"var offer = response.contractOffers[0];\r",
									"\r",
									"offer[\"provider\"] = \"https://provider.com\";\r",
									"offer[\"consumer\"] = \"https://consumer.com\";\r",
									"\r",
									"pm.environment.set(\"contract-offer-body\", JSON.stringify(offer));"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "passwordConsumer",
									"type": "string"
								},
								{
									"key": "key",
									"value": "X-Api-Key",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:9192/api/v1/data/catalog?providerUrl=http://catena-x-edc-provider:8282/api/v1/ids/data",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9192",
							"path": [
								"api",
								"v1",
								"data",
								"catalog"
							],
							"query": [
								{
									"key": "providerUrl",
									"value": "http://catena-x-edc-provider:8282/api/v1/ids/data"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Negotiate contract",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseText = pm.response.text();\r",
									"pm.test(\"Response is OK\", () => {\r",
									"    pm.expect(responseText).to.be.not.empty\r",
									"});\r",
									"\r",
									"const response = pm.response.text();\r",
									"\r",
									"pm.environment.set(\"negotiation-id\", response);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "passwordConsumer",
									"type": "string"
								},
								{
									"key": "key",
									"value": "X-Api-Key",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"connectorId\": \"provider\",\r\n    \"protocol\": \"ids-multipart\",\r\n    \"connectorAddress\": \"http://catena-x-edc-provider:8282/api/v1/ids/data\",\r\n    \"offer\": {\r\n        \"offerId\": \"0002:4fca4c65-64ed-41ab-a401-285189e15669\",\r\n        \"assetId\": \"{{assetID}}\",\r\n        \"policy\": {\r\n            \"permissions\": [\r\n                {\r\n                    \"edctype\": \"dataspaceconnector:permission\",\r\n                    \"uid\": null,\r\n                    \"target\": \"{{assetID}}\",\r\n                    \"action\": {\r\n                        \"type\": \"USE\",\r\n                        \"includedIn\": null,\r\n                        \"constraint\": null\r\n                    },\r\n                    \"assignee\": null,\r\n                    \"assigner\": null,\r\n                    \"constraints\": [],\r\n                    \"duties\": []\r\n                }\r\n            ],\r\n            \"prohibitions\": [],\r\n            \"obligations\": [],\r\n            \"extensibleProperties\": {},\r\n            \"inheritsFrom\": null,\r\n            \"assigner\": null,\r\n            \"assignee\": null,\r\n            \"target\": null,\r\n            \"@type\": {\r\n                \"@policytype\": \"set\"\r\n            }\r\n        },\r\n        \"asset\": {\r\n            \"properties\": {\r\n                \"ids:byteSize\": null,\r\n                \"asset:prop:id\": \"{{assetID}}\",\r\n                \"ids:fileName\": null\r\n            }\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:9192/api/v1/data/contractnegotiations",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9192",
							"path": [
								"api",
								"v1",
								"data",
								"contractnegotiations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get contract ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseText = pm.response.text();\r",
									"pm.test(\"Response is OK\", () => {\r",
									"    pm.expect(responseText).to.be.not.empty\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"\r",
									"pm.environment.set(\"agreement-id\", response.contractAgreementId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "passwordConsumer",
									"type": "string"
								},
								{
									"key": "key",
									"value": "X-Api-Key",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-API-KEY",
								"value": "secret",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:9192/api/v1/data/contractnegotiations/55056787-3f7f-426a-b466-471a62abf045",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9192",
							"path": [
								"api",
								"v1",
								"data",
								"contractnegotiations",
								"55056787-3f7f-426a-b466-471a62abf045"
							]
						}
					},
					"response": []
				},
				{
					"name": "Initiate transfer",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "passwordConsumer",
									"type": "string"
								},
								{
									"key": "key",
									"value": "X-Api-Key",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"connectorAddress\": \"http://catena-x-edc-provider:8282/api/v1/ids/data\",\n    \"protocol\": \"ids-multipart\",\n    \"connectorId\": \"consumer\",\n    \"assetId\": \"0002\",\n    \"contractId\": \"0002:e2570be8-0bdc-4d18-a90d-bef8276337ec\",\n    \"dataDestination\": {\n        \"properties\": {\n            \"baseUrl\": \"{{uploadFileURL}}\",\n            \"method\": \"PUT\",\n            \"name\": \"\",\n            \"type\": \"HttpData\",\n            \"contentType\": \"application/octet-stream\",\n            \"transferInOneGo\": true,\n            \"header:x-ms-blob-type\": \"BlockBlob\"\n        }\n    },\n    \"managedResources\": false,\n    \"transferType\": {\n        \"contentType\": \"application/octet-stream\",\n        \"isFinite\": true\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:9192/api/v1/data/transferprocess",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9192",
							"path": [
								"api",
								"v1",
								"data",
								"transferprocess"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get status of all transfers",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "passwordConsumer",
									"type": "string"
								},
								{
									"key": "key",
									"value": "X-Api-Key",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9192/api/v1/data/transferprocess",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9192",
							"path": [
								"api",
								"v1",
								"data",
								"transferprocess"
							],
							"query": [
								{
									"key": "offset",
									"value": "-37301109",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "-37301109",
									"disabled": true
								},
								{
									"key": "filter",
									"value": "Excepteur cupidatat",
									"disabled": true
								},
								{
									"key": "sort",
									"value": "ASC",
									"disabled": true
								},
								{
									"key": "sortField",
									"value": "Excepteur cupidatat",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all contract IDs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseText = pm.response.text();\r",
									"pm.test(\"Response is OK\", () => {\r",
									"    pm.expect(responseText).to.be.not.empty\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"\r",
									"var offer = response.contractOffers[0];\r",
									"\r",
									"pm.environment.set(\"agreement-id\", offer.contractAgreementId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json; charset=utf-8"
							},
							{
								"key": "X-API-KEY",
								"type": "text",
								"value": "passwordConsumer"
							}
						],
						"url": {
							"raw": "http://localhost:9192/api/v1/data/contractnegotiations",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9192",
							"path": [
								"api",
								"v1",
								"data",
								"contractnegotiations"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "assetID",
			"value": "0002",
			"type": "default"
		},
		{
			"key": "fileName",
			"value": "PowerConsumption.json",
			"type": "default"
		},
		{
			"key": "digitalTwinID",
			"value": "2222",
			"type": "default"
		},
		{
			"key": "downloadFileURL",
			"value": "https://catenax-test-source.s3.eu-central-1.amazonaws.com/PowerConsumption.json?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20220719T111520Z&X-Amz-SignedHeaders=host&X-Amz-Expires=43199&X-Amz-Credential=AKIARM37P5UZG7LNQIWM%2F20220719%2Feu-central-1%2Fs3%2Faws4_request&X-Amz-Signature=0b8d46994ec22f9ed611ed50dc696cf5a1f61dfd90afa545708ffd0c7097a752",
			"type": "default"
		},
		{
			"key": "uploadFileURL",
			"value": "https://catenax-test-destination.s3.eu-central-1.amazonaws.com/PowerConsumption.json?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20220719T111553Z&X-Amz-SignedHeaders=host&X-Amz-Expires=43199&X-Amz-Credential=AKIARM37P5UZG7LNQIWM%2F20220719%2Feu-central-1%2Fs3%2Faws4_request&X-Amz-Signature=8631ecd94d90b96e536d2a88dbc3e16c706b4bfc34576a465c216d86ebb10813",
			"type": "default"
		},
		{
			"key": "providerIdsDataPath",
			"value": "http://catena-x-edc-provider:8282/api/v1/ids/data",
			"type": "default"
		}
	]
}