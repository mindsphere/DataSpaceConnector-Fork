openapi: 3.0.1
paths:
  /policydefinitions:
    get:
      description: Returns all policy definitions according to a query
      operationId: getAllPolicies
      parameters:
      - in: query
        name: offset
        schema:
          type: integer
          format: int32
      - in: query
        name: limit
        schema:
          type: integer
          format: int32
      - in: query
        name: filter
        schema:
          type: string
      - in: query
        name: sort
        schema:
          type: string
          enum:
          - ASC
          - DESC
      - in: query
        name: sortField
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PolicyDefinitionResponseDto'
        "400":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: Request was malformed
      tags:
      - Policy
    post:
      description: Creates a new policy definition
      operationId: createPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyDefinitionRequestDto'
      responses:
        "200":
          description: policy definition was created successfully
        "400":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: Request body was malformed
        "409":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: "Could not create policy definition, because a contract definition\
            \ with that ID already exists"
      tags:
      - Policy
  /policydefinitions/{id}:
    delete:
      description: "Removes a policy definition with the given ID if possible. Deleting\
        \ a policy definition is only possible if that policy definition is not yet\
        \ referenced by a contract definition, in which case an error is returned.\
        \ DANGER ZONE: Note that deleting policy definitions can have unexpected results,\
        \ do this at your own risk!"
      operationId: deletePolicy
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Policy definition was deleted successfully
        "400":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: "Request was malformed, e.g. id was null"
        "404":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: An policy definition with the given ID does not exist
        "409":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: "The policy definition cannot be deleted, because it is referenced\
            \ by a contract definition"
      tags:
      - Policy
    get:
      description: Gets a policy definition with the given ID
      operationId: getPolicy
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyDefinitionResponseDto'
          description: The  policy definition
        "400":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: "Request was malformed, e.g. id was null"
        "404":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: An  policy definition with the given ID does not exist
      tags:
      - Policy
components:
  schemas:
    Action:
      type: object
      properties:
        constraint:
          $ref: '#/components/schemas/Constraint'
        includedIn:
          type: string
        type:
          type: string
    ApiErrorDetail:
      type: object
      properties:
        invalidValue:
          type: string
        message:
          type: string
        path:
          type: string
        type:
          type: string
    Constraint:
      type: object
      discriminator:
        propertyName: edctype
      properties:
        edctype:
          type: string
      required:
      - edctype
    Duty:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/Action'
        assignee:
          type: string
        assigner:
          type: string
        consequence:
          $ref: '#/components/schemas/Duty'
        constraints:
          type: array
          items:
            $ref: '#/components/schemas/Constraint'
        parentPermission:
          $ref: '#/components/schemas/Permission'
        target:
          type: string
        uid:
          type: string
    Permission:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/Action'
        assignee:
          type: string
        assigner:
          type: string
        constraints:
          type: array
          items:
            $ref: '#/components/schemas/Constraint'
        duties:
          type: array
          items:
            $ref: '#/components/schemas/Duty'
        target:
          type: string
        uid:
          type: string
    Policy:
      type: object
      properties:
        '@type':
          type: string
          enum:
          - SET
          - OFFER
          - CONTRACT
        assignee:
          type: string
        assigner:
          type: string
        extensibleProperties:
          type: object
          additionalProperties:
            type: object
        inheritsFrom:
          type: string
        obligations:
          type: array
          items:
            $ref: '#/components/schemas/Duty'
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
        prohibitions:
          type: array
          items:
            $ref: '#/components/schemas/Prohibition'
        target:
          type: string
    PolicyDefinitionRequestDto:
      type: object
      properties:
        id:
          type: string
        policy:
          $ref: '#/components/schemas/Policy'
      required:
      - policy
    PolicyDefinitionResponseDto:
      type: object
      properties:
        createdAt:
          type: integer
          format: int64
        id:
          type: string
        policy:
          $ref: '#/components/schemas/Policy'
      required:
      - policy
    Prohibition:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/Action'
        assignee:
          type: string
        assigner:
          type: string
        constraints:
          type: array
          items:
            $ref: '#/components/schemas/Constraint'
        target:
          type: string
        uid:
          type: string
