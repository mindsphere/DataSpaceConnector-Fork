openapi: 3.0.1
paths:
  /contractagreements:
    get:
      description: Gets all contract agreements according to a particular query
      operationId: getAllAgreements
      parameters:
      - in: query
        name: offset
        schema:
          type: integer
          format: int32
      - in: query
        name: limit
        schema:
          type: integer
          format: int32
      - in: query
        name: filter
        schema:
          type: string
      - in: query
        name: sort
        schema:
          type: string
          enum:
          - ASC
          - DESC
      - in: query
        name: sortField
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContractAgreementDto'
        "400":
          description: Request body was malformed
      tags:
      - Contract Agreement
  /contractagreements/{id}:
    get:
      description: Gets an contract agreement with the given ID
      operationId: getContractAgreement
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractAgreementDto'
          description: The contract agreement
        "400":
          description: "Request was malformed, e.g. id was null"
        "404":
          description: An contract agreement with the given ID does not exist
      tags:
      - Contract Agreement
components:
  schemas:
    Action:
      type: object
      properties:
        constraint:
          $ref: '#/components/schemas/Constraint'
        includedIn:
          type: string
        type:
          type: string
    Constraint:
      type: object
      discriminator:
        propertyName: edctype
      properties:
        edctype:
          type: string
      required:
      - edctype
    ContractAgreementDto:
      type: object
      properties:
        assetId:
          type: string
        consumerAgentId:
          type: string
        contractEndDate:
          type: integer
          format: int64
        contractSigningDate:
          type: integer
          format: int64
        contractStartDate:
          type: integer
          format: int64
        id:
          type: string
        policy:
          $ref: '#/components/schemas/Policy'
        providerAgentId:
          type: string
      required:
      - assetId
      - consumerAgentId
      - id
      - policy
      - providerAgentId
    Duty:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/Action'
        assignee:
          type: string
        assigner:
          type: string
        consequence:
          $ref: '#/components/schemas/Duty'
        constraints:
          type: array
          items:
            $ref: '#/components/schemas/Constraint'
        parentPermission:
          $ref: '#/components/schemas/Permission'
        target:
          type: string
        uid:
          type: string
    Permission:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/Action'
        assignee:
          type: string
        assigner:
          type: string
        constraints:
          type: array
          items:
            $ref: '#/components/schemas/Constraint'
        duties:
          type: array
          items:
            $ref: '#/components/schemas/Duty'
        target:
          type: string
        uid:
          type: string
    Policy:
      type: object
      properties:
        '@type':
          type: string
          enum:
          - SET
          - OFFER
          - CONTRACT
        assignee:
          type: string
        assigner:
          type: string
        extensibleProperties:
          type: object
          additionalProperties:
            type: object
        inheritsFrom:
          type: string
        obligations:
          type: array
          items:
            $ref: '#/components/schemas/Duty'
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
        prohibitions:
          type: array
          items:
            $ref: '#/components/schemas/Prohibition'
        target:
          type: string
    Prohibition:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/Action'
        assignee:
          type: string
        assigner:
          type: string
        constraints:
          type: array
          items:
            $ref: '#/components/schemas/Constraint'
        target:
          type: string
        uid:
          type: string
