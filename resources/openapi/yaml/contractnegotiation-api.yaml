openapi: 3.0.1
paths:
  /contractnegotiations:
    get:
      description: Returns all contract negotiations according to a query
      operationId: getNegotiations
      parameters:
      - in: query
        name: offset
        schema:
          type: integer
          format: int32
      - in: query
        name: limit
        schema:
          type: integer
          format: int32
      - in: query
        name: filter
        schema:
          type: string
      - in: query
        name: sort
        schema:
          type: string
          enum:
          - ASC
          - DESC
      - in: query
        name: sortField
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContractNegotiationDto'
        "400":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: Request was malformed
      tags:
      - Contract Negotiation
    post:
      description: "Initiates a contract negotiation for a given offer and with the\
        \ given counter part. Please note that successfully invoking this endpoint\
        \ only means that the negotiation was initiated. Clients must poll the /{id}/state\
        \ endpoint to track the state"
      operationId: initiateContractNegotiation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NegotiationInitiateRequestDto'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NegotiationId'
          description: The negotiation was successfully initiated. Returns the contract
            negotiation ID
          links:
            poll-state:
              operationId: getNegotiationState
              parameters:
                id: $response.body#/id
        "400":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: Request body was malformed
      tags:
      - Contract Negotiation
  /contractnegotiations/{id}:
    get:
      description: Gets an contract negotiation with the given ID
      operationId: getNegotiation
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractNegotiationDto'
          description: The contract negotiation
        "400":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: "Request was malformed, e.g. id was null"
        "404":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: An contract negotiation with the given ID does not exist
      tags:
      - Contract Negotiation
  /contractnegotiations/{id}/agreement:
    get:
      description: Gets a contract agreement for a contract negotiation with the given
        ID
      operationId: getAgreementForNegotiation
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractNegotiationDto'
          description: "The contract agreement that is attached to the negotiation,\
            \ or null"
        "400":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: "Request was malformed, e.g. id was null"
        "404":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: An contract negotiation with the given ID does not exist
      tags:
      - Contract Negotiation
  /contractnegotiations/{id}/cancel:
    post:
      description: "Requests aborting the contract negotiation. Due to the asynchronous\
        \ nature of contract negotiations, a successful response only indicates that\
        \ the request was successfully received. Clients must poll the /{id}/state\
        \ endpoint to track the state."
      operationId: cancelNegotiation
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Request to cancel the Contract negotiation was successfully
            received
          links:
            poll-state:
              operationId: getNegotiationState
        "400":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: "Request was malformed, e.g. id was null"
        "404":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: A contract negotiation with the given ID does not exist
      tags:
      - Contract Negotiation
  /contractnegotiations/{id}/decline:
    post:
      description: "Requests cancelling the contract negotiation. Due to the asynchronous\
        \ nature of contract negotiations, a successful response only indicates that\
        \ the request was successfully received. Clients must poll the /{id}/state\
        \ endpoint to track the state."
      operationId: declineNegotiation
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Request to decline the Contract negotiation was successfully
            received
          links:
            poll-state:
              operationId: getNegotiationState
        "400":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: "Request was malformed, e.g. id was null"
        "404":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: A contract negotiation with the given ID does not exist
      tags:
      - Contract Negotiation
  /contractnegotiations/{id}/state:
    get:
      description: Gets the state of a contract negotiation with the given ID
      operationId: getNegotiationState
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NegotiationState'
          description: The contract negotiation's state
        "400":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: "Request was malformed, e.g. id was null"
        "404":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: An contract negotiation with the given ID does not exist
      tags:
      - Contract Negotiation
components:
  schemas:
    Action:
      type: object
      properties:
        constraint:
          $ref: '#/components/schemas/Constraint'
        includedIn:
          type: string
        type:
          type: string
    ApiErrorDetail:
      type: object
      properties:
        invalidValue:
          type: string
        message:
          type: string
        path:
          type: string
        type:
          type: string
    Constraint:
      type: object
      discriminator:
        propertyName: edctype
      properties:
        edctype:
          type: string
      required:
      - edctype
    ContractAgreementDto:
      type: object
      properties:
        assetId:
          type: string
        consumerAgentId:
          type: string
        contractEndDate:
          type: integer
          format: int64
        contractSigningDate:
          type: integer
          format: int64
        contractStartDate:
          type: integer
          format: int64
        id:
          type: string
        policy:
          $ref: '#/components/schemas/Policy'
        providerAgentId:
          type: string
      required:
      - assetId
      - consumerAgentId
      - id
      - policy
      - providerAgentId
    ContractNegotiationDto:
      type: object
      properties:
        contractAgreementId:
          type: string
        counterPartyAddress:
          type: string
        createdAt:
          type: integer
          format: int64
        errorDetail:
          type: string
        id:
          type: string
        protocol:
          type: string
        state:
          type: string
        type:
          type: string
          enum:
          - CONSUMER
          - PROVIDER
        updatedAt:
          type: integer
          format: int64
    ContractOfferDescription:
      type: object
      properties:
        assetId:
          type: string
        offerId:
          type: string
        policy:
          $ref: '#/components/schemas/Policy'
      required:
      - assetId
      - offerId
      - policy
    Duty:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/Action'
        assignee:
          type: string
        assigner:
          type: string
        consequence:
          $ref: '#/components/schemas/Duty'
        constraints:
          type: array
          items:
            $ref: '#/components/schemas/Constraint'
        parentPermission:
          $ref: '#/components/schemas/Permission'
        target:
          type: string
        uid:
          type: string
    NegotiationId:
      type: object
      properties:
        id:
          type: string
    NegotiationInitiateRequestDto:
      type: object
      properties:
        connectorAddress:
          type: string
        connectorId:
          type: string
        offer:
          $ref: '#/components/schemas/ContractOfferDescription'
        protocol:
          type: string
      required:
      - connectorAddress
      - connectorId
      - offer
      - protocol
    NegotiationState:
      type: object
      properties:
        state:
          type: string
    Permission:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/Action'
        assignee:
          type: string
        assigner:
          type: string
        constraints:
          type: array
          items:
            $ref: '#/components/schemas/Constraint'
        duties:
          type: array
          items:
            $ref: '#/components/schemas/Duty'
        target:
          type: string
        uid:
          type: string
    Policy:
      type: object
      properties:
        '@type':
          type: string
          enum:
          - SET
          - OFFER
          - CONTRACT
        assignee:
          type: string
        assigner:
          type: string
        extensibleProperties:
          type: object
          additionalProperties:
            type: object
        inheritsFrom:
          type: string
        obligations:
          type: array
          items:
            $ref: '#/components/schemas/Duty'
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
        prohibitions:
          type: array
          items:
            $ref: '#/components/schemas/Prohibition'
        target:
          type: string
    Prohibition:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/Action'
        assignee:
          type: string
        assigner:
          type: string
        constraints:
          type: array
          items:
            $ref: '#/components/schemas/Constraint'
        target:
          type: string
        uid:
          type: string
