openapi: 3.0.1
paths:
  /assets:
    get:
      description: Gets all assets according to a particular query
      operationId: getAllAssets
      parameters:
      - in: query
        name: offset
        schema:
          type: integer
          format: int32
      - in: query
        name: limit
        schema:
          type: integer
          format: int32
      - in: query
        name: filter
        schema:
          type: string
      - in: query
        name: sort
        schema:
          type: string
          enum:
          - ASC
          - DESC
      - in: query
        name: sortField
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssetDto'
        "400":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: Request body was malformed
      tags:
      - Asset
    post:
      description: Creates a new asset together with a data address
      operationId: createAsset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetEntryDto'
      responses:
        "200":
          description: Asset was created successfully
        "400":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: Request body was malformed
        "409":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: "Could not create asset, because an asset with that ID already\
            \ exists"
      tags:
      - Asset
  /assets/{id}:
    delete:
      description: "Removes an asset with the given ID if possible. Deleting an asset\
        \ is only possible if that asset is not yet referenced by a contract agreement,\
        \ in which case an error is returned. DANGER ZONE: Note that deleting assets\
        \ can have unexpected results, especially for contract offers that have been\
        \ sent out or ongoing or contract negotiations."
      operationId: removeAsset
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Asset was deleted successfully
        "400":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: "Request was malformed, e.g. id was null"
        "404":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: An asset with the given ID does not exist
        "409":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: "The asset cannot be deleted, because it is referenced by a\
            \ contract agreement"
      tags:
      - Asset
    get:
      description: Gets an asset with the given ID
      operationId: getAsset
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetDto'
          description: The asset
        "400":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: "Request was malformed, e.g. id was null"
        "404":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiErrorDetail'
          description: An asset with the given ID does not exist
      tags:
      - Asset
components:
  schemas:
    ApiErrorDetail:
      type: object
      properties:
        invalidValue:
          type: string
        message:
          type: string
        path:
          type: string
        type:
          type: string
    AssetDto:
      type: object
      properties:
        properties:
          type: object
          additionalProperties:
            type: object
      required:
      - properties
    AssetEntryDto:
      type: object
      properties:
        asset:
          $ref: '#/components/schemas/AssetDto'
        dataAddress:
          $ref: '#/components/schemas/DataAddressDto'
      required:
      - asset
      - dataAddress
    DataAddressDto:
      type: object
      properties:
        properties:
          type: object
          additionalProperties:
            type: string
